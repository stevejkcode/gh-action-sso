name: SSO Onboarding Submission
run-name: Process SSO Onboarding Form
permissions:
  contents: write
  issues: write
  pull-requests: write
on: 
  issues:
    types: [opened]
env:
  KEYCLOAK_STAGING_USERNAME: ${{ secrets['KEYCLOAK_STAGING_USERNAME'] }}
  KEYCLOAK_STAGING_PASSWORD: ${{ secrets['KEYCLOAK_STAGING_PASSWORD'] }}
  KEYCLOAK_STAGING_URL: ${{ vars.KEYCLOAK_STAGING_URL }}
  KEYCLOAK_PRODUCTION_USERNAME: ${{ secrets['KEYCLOAK_PRODUCTION_USERNAME'] }}
  KEYCLOAK_PRODUCTION_PASSWORD: ${{ secrets['KEYCLOAK_PRODUCTION_PASSWORD'] }}
  KEYCLOAK_PRODUCTION_URL: ${{ vars.KEYCLOAK_PRODUCTION_URL }}
  BACKEND_STAGING_ACCESS_KEY: ${{ secrets['BACKEND_STAGING_ACCESS_KEY'] }}
  BACKEND_STAGING_SECRET_KEY: ${{ secrets['BACKEND_STAGING_SECRET_KEY'] }}
  BACKEND_PRODUCTION_ACCESS_KEY: ${{ secrets['BACKEND_PRODUCTION_ACCESS_KEY'] }}
  BACKEND_PRODUCTION_SECRET_KEY: ${{ secrets['BACKEND_PRODUCTION_SECRET_KEY'] }}
jobs:
  parse-form:
    runs-on: ubuntu-latest
    outputs: 
      branch_name: ${{ steps.feature-branch.outputs.branch_name }}
      environment: ${{ steps.parse-form.outputs.environment }}
      environment_lower: ${{ steps.parse-form.outputs.environment_lower }}

    # Only run job for issues labeled as SSO
    if: contains(github.event.issue.labels.*.name, 'sso')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: GitHub Issue Parser
        uses: stefanbuck/github-issue-parser@v2.0.6
        id: issue-parser
        with: 
          template-path: .github/ISSUE_TEMPLATE/sso-onboarding.yml

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Parse Issue Form
        id: parse-form
        env:
          EVENT_CONTEXT: ${{ toJSON(github.event) }}
        run: python ./src/terraform/parse_form.py $EVENT_CONTEXT

      - name: Create Feature Branch
        id: feature-branch
        run: |
          echo branch_name=sso-onboarding-"${{ steps.parse-form.outputs.environment_lower }}"_$CLIENT_APPLICATION_ID >> $GITHUB_OUTPUT
          git checkout -b sso-onboarding-"${{ steps.parse-form.outputs.environment_lower }}"_$CLIENT_APPLICATION_ID
          git config --global --add --bool push.autoSetupRemote true
          git config user.name github-actions
          git config user.email github-actions@github.com
          git push
        env:
          CLIENT_APPLICATION_ID: ${{ steps.parse-form.outputs.client_application_id }}
          CLIENT_APPLICATION_NAME: ${{ steps.parse-form.outputs.client_application_name }}

      - name: Update Issue
        uses: actions/github-script@v6
        env:
          APPLICATION_NAME: ${{ steps.parse-form.outputs.client_application_name }}
        with:
          script: |
            const script = require('./src/terraform/update_issue.js');
            script({github, context});

      - name: Generate Terraform File
        env:
          EVENT_CONTEXT: ${{ toJSON(github.event) }}
          CLIENT_APPLICATION_ID: ${{ steps.parse-form.outputs.client_application_id }}
          CLIENT_APPLICATION_NAME: ${{ steps.parse-form.outputs.client_application_name }}
        run: python ./src/terraform/render_template.py $EVENT_CONTEXT

      - name: Commit Terraform File
        run: |
          echo $TF_FILE
          git add $TF_FILE
          git commit -m "$TF_FILE (autogenerated)"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git push

      - name: Open PR
        id: pull-request
        uses: repo-sync/pull-request@v2
        with:
          source_branch: ${{ steps.feature-branch.outputs.branch_name }}
          destination_branch: main
          pr_title: "[${{ steps.parse-form.outputs.environment }}]: Onboard ${{ steps.parse-form.outputs.client_application_name }}"
          pr_body: |
            Autogenerated onboarding request for `${{ steps.parse-form.outputs.client_application_name }}`
            Resolves #${{ github.event.issue.number }}
          pr_label: "user-request,sso,${{ steps.parse-form.outputs.environment_lower }}"

  terraform-plan:
    runs-on: ubuntu-latest
    needs: parse-form
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.parse-form.outputs.branch_name }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Plan
        env:
          ENVIRONMENT: ${{ needs.parse-form.outputs.environment }}
          ENVIRONMENT_LOWER: ${{ needs.parse-form.outputs.environment_lower }}
        run: |
          ./src/terraform/generate_clients.sh plan

  link-job:
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: ${{ always() }}
    steps:
      - name: Link Action
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.issue.number }}
          comment-author: 'github-actions[bot]'
          body: |
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}